services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: autolog-db
    environment:
      POSTGRES_DB: autolog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - autolog-network

  # Go Backend with Live Reload
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: autolog-backend
    ports:
      - "8080:8080"
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: autolog
      DB_PORT: 5432
      DB_SSLMODE: disable
      JWT_SECRET: your-secret-key-change-in-production
      CORS_ORIGIN: http://localhost:5173
      ENV: development
      PORT: 8080
      OLLAMA_URL: http://ollama:11434
      OLLAMA_MODEL: llama2:13b
      LOGPARSER_URL: http://logparser-service:8001
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - autolog-network

  # Local LLM Service (Ollama)
  ollama:
    image: ollama/ollama:latest
    container_name: autolog-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - autolog-network
    entrypoint: ["/bin/sh", "-c", "ollama serve & sleep 5 && ollama pull llama2:13b && ollama pull nomic-embed-text && tail -f /dev/null"]

  # React Frontend with Live Reload
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: autolog-frontend
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:8080/api/v1
      VITE_WS_URL: ws://localhost:8080/api/v1
    depends_on:
      backend:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "5173"]
    restart: unless-stopped
    networks:
      - autolog-network

  logparser-service:
    build:
      context: ./logparser_service
    container_name: logparser-service
    ports:
      - "8000:8000"
    networks:
      - autolog-network
    restart: unless-stopped

volumes:
  postgres_data:
  ollama_data:

networks:
  autolog-network:
    driver: bridge 